{"version":3,"sources":["components/NoteCard.js","pages/Notes.js","pages/Create.js","components/Layout.js","App.js","index.js"],"names":["useStyles","makeStyles","test","border","note","category","NoteCard","handleDelete","classes","Card","elevation","className","CardHeader","action","IconButton","onClick","id","title","subheader","CardContent","Typography","variant","color","details","Notes","useState","notes","setNotes","useEffect","fetch","then","res","json","data","a","method","newNotes","filter","Container","Grid","container","spacing","map","item","xs","md","lg","field","marginTop","marginBottom","display","Create","history","useHistory","setTitle","setDetails","titleError","setTitleError","detailsError","setDetailsError","setCategory","size","component","gutterBottom","noValidate","autoComplete","onSubmit","e","preventDefault","headers","body","JSON","stringify","push","TextField","onChange","target","value","label","fullWidth","required","error","multiline","rows","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","Button","type","endIcon","theme","page","background","width","padding","root","drawer","drawerPaper","active","Layout","children","location","useLocation","menuItems","text","icon","SubjectOutlined","path","AddCircleOutlineOutlined","Drawer","paper","anchor","List","ListItem","button","pathname","ListItemIcon","ListItemText","primary","createMuiTheme","palette","main","secondary","purple","typography","fontFamily","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","App","ThemeProvider","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2483a581.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DeleteOutlined from \"@material-ui/icons/DeleteOutlined\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  test: {\r\n    border: (note) => {\r\n      if (note.category == 'work'){\r\n        return '1px solid red'\r\n      }\r\n    }\r\n  }\r\n})\r\nexport default function NoteCard({ note, handleDelete }) {\r\n  const classes = useStyles(note)\r\n\r\n  return (\r\n    <div>\r\n      <Card elevation={1} className={classes.test}>\r\n        <CardHeader\r\n          action={\r\n            <IconButton onClick={() => handleDelete(note.id)}>\r\n              <DeleteOutlined />\r\n            </IconButton>\r\n          }\r\n          title={note.title}\r\n          subheader={note.category}\r\n        />\r\n        <CardContent>\r\n          <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {note.details}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport NoteCard from \"../components/NoteCard\";\r\n\r\nexport default function Notes() {\r\n  const [notes, setNotes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:8000/notes\")\r\n      .then((res) => res.json())\r\n      .then((data) => setNotes(data));\r\n  }, []);\r\n\r\n  const handleDelete = async (id) => {\r\n    await fetch(\"http://localhost:8000/notes/\" + id, {\r\n      method: \"DELETE\",\r\n    });\r\n    const newNotes = notes.filter((note) => note.id != id);\r\n    setNotes(newNotes);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Grid container spacing={3}>\r\n        {notes.map((note) => (\r\n          <Grid item xs={12} md={6} lg={4} key={note.id}>\r\n            <NoteCard note={note} handleDelete={handleDelete} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n  field: {\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n    display: \"block\",\r\n  },\r\n});\r\n\r\nexport default function Create() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [details, setDetails] = useState(\"\");\r\n  const [titleError, setTitleError] = useState(false);\r\n  const [detailsError, setDetailsError] = useState(false);\r\n  const [category, setCategory] = useState(\"money\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setTitleError(false);\r\n    setDetailsError(false);\r\n\r\n    if (title == \"\") {\r\n      setTitleError(true);\r\n    }\r\n    if (details == \"\") {\r\n      setDetailsError(true);\r\n    }\r\n    if (title && details) {\r\n      fetch(\"http://localhost:8000/notes\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-type\": \"application/json\" },\r\n        body: JSON.stringify({ title, details, category }),\r\n      }).then(() => history.push(\"/\"));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container size=\"sm\">\r\n      <Typography\r\n        variant=\"h6\"\r\n        color=\"textSecondary\"\r\n        component=\"h2\"\r\n        gutterBottom\r\n      >\r\n        Create a New Note\r\n      </Typography>\r\n\r\n      <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n        <TextField\r\n          className={classes.field}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          label=\"Note Title\"\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          fullWidth\r\n          required\r\n          error={titleError}\r\n        />\r\n        <TextField\r\n          className={classes.field}\r\n          onChange={(e) => setDetails(e.target.value)}\r\n          label=\"Details\"\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          multiline\r\n          rows={4}\r\n          fullWidth\r\n          required\r\n          error={detailsError}\r\n        />\r\n\r\n        {/* <Radio value=\"hello\" />\r\n        <Radio value=\"goodbye\" /> */}\r\n\r\n        <FormControl className={classes.field}>\r\n          <FormLabel>Note Category</FormLabel>\r\n          <RadioGroup\r\n            value={category}\r\n            onChange={(e) => setCategory(e.target.value)}\r\n          >\r\n            <FormControlLabel value=\"money\" control={<Radio />} label=\"Money\" />\r\n            <FormControlLabel value=\"todos\" control={<Radio />} label=\"Todos\" />\r\n            <FormControlLabel\r\n              value=\"reminders\"\r\n              control={<Radio />}\r\n              label=\"Reminders\"\r\n            />\r\n            <FormControlLabel value=\"work\" control={<Radio />} label=\"Work\" />\r\n          </RadioGroup>\r\n        </FormControl>\r\n\r\n        <Button\r\n          type=\"submit\"\r\n          color=\"secondary\"\r\n          variant=\"contained\"\r\n          endIcon={<KeyboardArrowRightIcon />}\r\n        >\r\n          Submit\r\n        </Button>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { AddCircleOutlineOutlined, SubjectOutlined } from \"@material-ui/icons\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    page: {\r\n      background: \"#f9f9f9\",\r\n      width: \"100%\",\r\n      padding: theme.spacing(3),\r\n    },\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    active: {\r\n      background: \"#f4f4f4\",\r\n    },\r\n    title: {\r\n      padding: theme.spacing(2),\r\n    },\r\n  };\r\n});\r\n\r\nexport default function Layout({ children }) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const menuItems = [\r\n    {\r\n      text: \"My Notes\",\r\n      icon: <SubjectOutlined color=\"secondary\" />,\r\n      path: \"/\",\r\n    },\r\n    {\r\n      text: \"Create Note\",\r\n      icon: <AddCircleOutlineOutlined color=\"secondary\" />,\r\n      path: \"/create\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* app bar */}\r\n\r\n      {/* side drawer */}\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{ paper: classes.drawerPaper }}\r\n        anchor=\"left\"\r\n      >\r\n        <div>\r\n          <Typography variant=\"h5\" className={classes.title}>\r\n            Notes\r\n          </Typography>\r\n        </div>\r\n\r\n        {/* links/list section */}\r\n        <List>\r\n          {menuItems.map((item) => (\r\n            <ListItem\r\n              button\r\n              key={item.text}\r\n              onClick={() => history.push(item.path)}\r\n              className={location.pathname == item.path ? classes.active : null}\r\n            >\r\n              <ListItemIcon>{item.icon}</ListItemIcon>\r\n              <ListItemText primary={item.text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n\r\n      {/* main content */}\r\n      <div className={classes.page}>{children}</div>\r\n    </div>\r\n  );\r\n}\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Notes from \"./pages/Notes\";\r\nimport Create from \"./pages/Create\";\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\r\nimport { purple } from \"@material-ui/core/colors\";\r\nimport Layout from \"./components/Layout\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#fefefe\",\r\n    },\r\n    secondary: purple,\r\n  },\r\n  typography: {\r\n    fontFamily: \"Quicksand\",\r\n    fontWeightLight: 400,\r\n    fontWeightRegular: 500,\r\n    fontWeightMedium: 600,\r\n    fontWeightBold: 700,\r\n  },\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Router>\r\n        <Layout>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Notes />\r\n            </Route>\r\n            <Route path=\"/create\">\r\n              <Create />\r\n            </Route>\r\n          </Switch>\r\n        </Layout>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}